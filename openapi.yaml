openapi: 3.0.1
info:
  title: CRDOpenAPI
  version: v1.15.2
servers:
- url: /
paths:
  /apis/helm.fluxcd.io/v1/namespaces/{namespace}/helmreleases:
    get:
      description: list or watch namespace scoped HelmRelease
      operationId: listNamespacedHelmRelease
      parameters:
      - description: If 'true', then the output is pretty printed.
        in: query
        name: pretty
        schema:
          type: string
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications.
        in: query
        name: watch
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HelmReleaseList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.HelmReleaseList'
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
    post:
      description: Creates a namespace scoped HelmRelease
      operationId: createNamespacedHelmRelease
      parameters:
      - description: If 'true', then the output is pretty printed.
        in: query
        name: pretty
        schema:
          type: string
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.HelmRelease'
        description: The JSON schema of the Resource to create.
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HelmRelease'
          description: Created
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: body
  /apis/helm.fluxcd.io/v1/namespaces/{namespace}/helmreleases/{name}:
    delete:
      description: Deletes the specified namespace scoped HelmRelease
      operationId: deleteNamespacedHelmRelease
      parameters:
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy.
        in: query
        name: propagationPolicy
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: v1.DeleteOptions
    get:
      description: Returns a namespace scoped HelmRelease
      operationId: getNamespacedHelmRelease
      parameters:
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HelmRelease'
          description: A single Resource
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
    patch:
      description: patch the specified namespace scoped HelmRelease
      operationId: patchNamespacedHelmRelease
      parameters:
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
          application/merge-patch+json:
            schema:
              type: object
        description: The JSON schema of the Resource to patch.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HelmRelease'
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: body
    put:
      description: replace the specified namespace scoped HelmRelease
      operationId: replaceNamespacedHelmRelease
      parameters:
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.HelmRelease'
        description: The JSON schema of the Resource to replace.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HelmRelease'
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: body
  /apis/helm.fluxcd.io/v1/namespaces/{namespace}/helmreleases/{name}/status:
    get:
      description: read status of the specified namespace scoped custom object
      operationId: getNamespacedCustomObjectStatus
      parameters:
      - description: the custom resource's group
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: the custom resource's version
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom resource's plural name. For TPRs this would be lowercase
          plural kind.
        in: path
        name: plural
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            application/vnd.kubernetes.protobuf:
              schema:
                type: object
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
    patch:
      description: partially update status of the specified namespace scoped custom
        object
      operationId: patchNamespacedCustomObjectStatus
      parameters:
      - description: the custom resource's group
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: the custom resource's version
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom resource's plural name. For TPRs this would be lowercase
          plural kind.
        in: path
        name: plural
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              description: The JSON schema of the Resource to patch.
              type: object
          application/merge-patch+json:
            schema:
              description: The JSON schema of the Resource to patch.
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            application/vnd.kubernetes.protobuf:
              schema:
                type: object
          description: OK
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: body
    put:
      description: replace status of the specified namespace scoped custom object
      operationId: replaceNamespacedCustomObjectStatus
      parameters:
      - description: the custom resource's group
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: the custom resource's version
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: The custom resource's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: the custom resource's plural name. For TPRs this would be lowercase
          plural kind.
        in: path
        name: plural
        required: true
        schema:
          type: string
      - description: the custom object's name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            application/vnd.kubernetes.protobuf:
              schema:
                type: object
          description: OK
        201:
          content:
            application/json:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            application/vnd.kubernetes.protobuf:
              schema:
                type: object
          description: Created
        401:
          content: {}
          description: Unauthorized
      tags:
      - v1_helmrelease
      x-codegen-request-body-name: body
components:
  schemas:
    v1.HelmRelease:
      example:
        metadata: '{}'
        apiVersion: apiVersion
        kind: kind
        spec:
          rollback:
            maxRetries: 6
            wait: true
            enable: true
            force: true
            disableHooks: true
            retry: true
            timeout: 1
            recreate: true
          wait: true
          valuesFrom:
          - secretKeyRef:
              name: name
              namespace: namespace
              optional: true
              key: key
            externalSourceRef:
              optional: true
              url: url
            configMapKeyRef:
              name: name
              namespace: namespace
              optional: true
              key: key
            chartFileRef:
              path: path
              optional: true
          - secretKeyRef:
              name: name
              namespace: namespace
              optional: true
              key: key
            externalSourceRef:
              optional: true
              url: url
            configMapKeyRef:
              name: name
              namespace: namespace
              optional: true
              key: key
            chartFileRef:
              path: path
              optional: true
          test:
            cleanup: true
            enable: true
            ignoreFailures: true
            timeout: 5
          skipCRDs: true
          releaseName: releaseName
          values: '{}'
          maxHistory: 0
          timeout: 5
          disableOpenAPIValidation: true
          resetValues: true
          helmVersion: v2
          forceUpgrade: true
          targetNamespace: targetNamespace
          valueFileSecrets:
          - name: name
          - name: name
          chart:
            path: path
            ref: ref
            chartPullSecret:
              name: name
            git: git
            skipDepUpdate: true
            name: name
            secretRef:
              name: name
              namespace: namespace
            repository: repository
            version: version
        status:
          phase: ChartFetched
          rollbackCount: 7
          releaseName: releaseName
          releaseStatus: releaseStatus
          lastAttemptedRevision: lastAttemptedRevision
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: ChartFetched
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            status: True
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: ChartFetched
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            status: True
          observedGeneration: 2
          revision: revision
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties: {}
          type: object
        spec:
          $ref: '#/components/schemas/v1_HelmRelease_spec'
        status:
          $ref: '#/components/schemas/v1_HelmRelease_status'
      type: object
    v1.HelmReleaseList:
      description: HelmReleaseList is a list of HelmRelease
      example:
        metadata:
          remainingItemCount: 9
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata: '{}'
          apiVersion: apiVersion
          kind: kind
          spec:
            rollback:
              maxRetries: 6
              wait: true
              enable: true
              force: true
              disableHooks: true
              retry: true
              timeout: 1
              recreate: true
            wait: true
            valuesFrom:
            - secretKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              externalSourceRef:
                optional: true
                url: url
              configMapKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              chartFileRef:
                path: path
                optional: true
            - secretKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              externalSourceRef:
                optional: true
                url: url
              configMapKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              chartFileRef:
                path: path
                optional: true
            test:
              cleanup: true
              enable: true
              ignoreFailures: true
              timeout: 5
            skipCRDs: true
            releaseName: releaseName
            values: '{}'
            maxHistory: 0
            timeout: 5
            disableOpenAPIValidation: true
            resetValues: true
            helmVersion: v2
            forceUpgrade: true
            targetNamespace: targetNamespace
            valueFileSecrets:
            - name: name
            - name: name
            chart:
              path: path
              ref: ref
              chartPullSecret:
                name: name
              git: git
              skipDepUpdate: true
              name: name
              secretRef:
                name: name
                namespace: namespace
              repository: repository
              version: version
          status:
            phase: ChartFetched
            rollbackCount: 7
            releaseName: releaseName
            releaseStatus: releaseStatus
            lastAttemptedRevision: lastAttemptedRevision
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: ChartFetched
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: True
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: ChartFetched
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: True
            observedGeneration: 2
            revision: revision
        - metadata: '{}'
          apiVersion: apiVersion
          kind: kind
          spec:
            rollback:
              maxRetries: 6
              wait: true
              enable: true
              force: true
              disableHooks: true
              retry: true
              timeout: 1
              recreate: true
            wait: true
            valuesFrom:
            - secretKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              externalSourceRef:
                optional: true
                url: url
              configMapKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              chartFileRef:
                path: path
                optional: true
            - secretKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              externalSourceRef:
                optional: true
                url: url
              configMapKeyRef:
                name: name
                namespace: namespace
                optional: true
                key: key
              chartFileRef:
                path: path
                optional: true
            test:
              cleanup: true
              enable: true
              ignoreFailures: true
              timeout: 5
            skipCRDs: true
            releaseName: releaseName
            values: '{}'
            maxHistory: 0
            timeout: 5
            disableOpenAPIValidation: true
            resetValues: true
            helmVersion: v2
            forceUpgrade: true
            targetNamespace: targetNamespace
            valueFileSecrets:
            - name: name
            - name: name
            chart:
              path: path
              ref: ref
              chartPullSecret:
                name: name
              git: git
              skipDepUpdate: true
              name: name
              secretRef:
                name: name
                namespace: namespace
              repository: repository
              version: version
          status:
            phase: ChartFetched
            rollbackCount: 7
            releaseName: releaseName
            releaseStatus: releaseStatus
            lastAttemptedRevision: lastAttemptedRevision
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: ChartFetched
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: True
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: ChartFetched
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: True
            observedGeneration: 2
            revision: revision
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        items:
          description: 'List of helmreleases. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md'
          items:
            $ref: '#/components/schemas/v1.HelmRelease'
          type: array
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          $ref: '#/components/schemas/v1_HelmReleaseList_metadata'
      required:
      - items
      type: object
    v1_HelmRelease_spec_chart_chartPullSecret:
      description: ChartPullSecret holds the reference to the authentication secret
        for accessing the Helm repository using HTTPS basic auth. NOT IMPLEMENTED!
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
    v1_HelmRelease_spec_chart_secretRef:
      description: SecretRef holds the authentication secret for accessing the Git
        repository (over HTTPS). The credentials will be added to an HTTPS GitURL
        before the mirror is started.
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
    v1_HelmRelease_spec_chart:
      example:
        path: path
        ref: ref
        chartPullSecret:
          name: name
        git: git
        skipDepUpdate: true
        name: name
        secretRef:
          name: name
          namespace: namespace
        repository: repository
        version: version
      properties:
        chartPullSecret:
          $ref: '#/components/schemas/v1_HelmRelease_spec_chart_chartPullSecret'
        git:
          description: Git URL is the URL of the Git repository, e.g. `git@github.com:org/repo`,
            `http://github.com/org/repo`, or `ssh://git@example.com:2222/org/repo.git`.
          type: string
        name:
          description: Name is the name of the Helm chart _without_ an alias, e.g.
            redis (for `helm upgrade [flags] stable/redis`).
          type: string
        path:
          description: Path is the path to the chart relative to the repository root.
          type: string
        ref:
          description: Ref is the Git branch (or other reference) to use. Defaults
            to 'master', or the configured default Git ref.
          type: string
        repository:
          description: RepoURL is the URL of the Helm repository, e.g. `https://kubernetes-charts.storage.googleapis.com`
            or `https://charts.example.com`.
          type: string
        secretRef:
          $ref: '#/components/schemas/v1_HelmRelease_spec_chart_secretRef'
        skipDepUpdate:
          description: SkipDepUpdate will tell the operator to skip running 'helm
            dep update' before installing or upgrading the chart, the chart dependencies
            _must_ be present for this to succeed.
          type: boolean
        version:
          description: Version is the targeted Helm chart version, e.g. 7.0.1.
          type: string
    v1_HelmRelease_spec_rollback:
      description: The rollback settings for this Helm release.
      example:
        maxRetries: 6
        wait: true
        enable: true
        force: true
        disableHooks: true
        retry: true
        timeout: 1
        recreate: true
      properties:
        disableHooks:
          description: DisableHooks will mark this Helm release to prevent hooks from
            running during the rollback.
          type: boolean
        enable:
          description: Enable will mark this Helm release for rollbacks.
          type: boolean
        force:
          description: Force will mark this Helm release to `--force` rollbacks. This
            forces the resource updates through delete/recreate if needed.
          type: boolean
        maxRetries:
          description: MaxRetries is the maximum amount of upgrade retries the operator
            should make before bailing.
          format: int64
          type: integer
        recreate:
          description: Recreate will mark this Helm release to `--recreate-pods` for
            if applicable. This performs pod restarts.
          type: boolean
        retry:
          description: Retry will mark this Helm release for upgrade retries after
            a rollback.
          type: boolean
        timeout:
          description: Timeout is the time to wait for any individual Kubernetes operation
            (like Jobs for hooks) during rollback.
          format: int64
          type: integer
        wait:
          description: Wait will mark this Helm release to wait until all Pods, PVCs,
            Services, and minimum number of Pods of a Deployment, StatefulSet, or
            ReplicaSet are in a ready state before marking the release as successful.
          type: boolean
    v1_HelmRelease_spec_test:
      description: The test settings for this Helm release.
      example:
        cleanup: true
        enable: true
        ignoreFailures: true
        timeout: 5
      properties:
        cleanup:
          description: Cleanup, when targeting Helm 2, determines whether to delete
            test pods between each test run initiated by the Helm Operator.
          type: boolean
        enable:
          description: Enable will mark this Helm release for tests.
          type: boolean
        ignoreFailures:
          description: IgnoreFailures will cause a Helm release to be rolled back
            if it fails otherwise it will be left in a released state
          type: boolean
        timeout:
          description: Timeout is the time to wait for any individual Kubernetes operation
            (like Jobs for hooks) during test.
          format: int64
          type: integer
    v1_HelmRelease_spec_valueFileSecrets:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
    v1_HelmRelease_spec_chartFileRef:
      description: The reference to a local chart file with release values.
      example:
        path: path
        optional: true
      properties:
        optional:
          description: Optional will mark this ChartFileSelector as optional. The
            result of this are that operations are permitted without the source, due
            to it e.g. being temporarily unavailable.
          type: boolean
        path:
          description: Path is the file path to the source relative to the chart root.
          type: string
      required:
      - path
    v1_HelmRelease_spec_configMapKeyRef:
      description: The reference to a config map with release values.
      example:
        name: name
        namespace: namespace
        optional: true
        key: key
      properties:
        key:
          type: string
        name:
          type: string
        namespace:
          type: string
        optional:
          type: boolean
      required:
      - name
    v1_HelmRelease_spec_externalSourceRef:
      description: The reference to an external source with release values.
      example:
        optional: true
        url: url
      properties:
        optional:
          description: Optional will mark this ExternalSourceSelector as optional.
            The result of this are that operations are permitted without the source,
            due to it e.g. being temporarily unavailable.
          type: boolean
        url:
          description: URL is the URL of the external source.
          type: string
      required:
      - url
    v1_HelmRelease_spec_secretKeyRef:
      description: The reference to a secret with release values.
      example:
        name: name
        namespace: namespace
        optional: true
        key: key
      properties:
        key:
          type: string
        name:
          type: string
        namespace:
          type: string
        optional:
          type: boolean
      required:
      - name
    v1_HelmRelease_spec_valuesFrom:
      example:
        secretKeyRef:
          name: name
          namespace: namespace
          optional: true
          key: key
        externalSourceRef:
          optional: true
          url: url
        configMapKeyRef:
          name: name
          namespace: namespace
          optional: true
          key: key
        chartFileRef:
          path: path
          optional: true
      properties:
        chartFileRef:
          $ref: '#/components/schemas/v1_HelmRelease_spec_chartFileRef'
        configMapKeyRef:
          $ref: '#/components/schemas/v1_HelmRelease_spec_configMapKeyRef'
        externalSourceRef:
          $ref: '#/components/schemas/v1_HelmRelease_spec_externalSourceRef'
        secretKeyRef:
          $ref: '#/components/schemas/v1_HelmRelease_spec_secretKeyRef'
    v1_HelmRelease_spec:
      example:
        rollback:
          maxRetries: 6
          wait: true
          enable: true
          force: true
          disableHooks: true
          retry: true
          timeout: 1
          recreate: true
        wait: true
        valuesFrom:
        - secretKeyRef:
            name: name
            namespace: namespace
            optional: true
            key: key
          externalSourceRef:
            optional: true
            url: url
          configMapKeyRef:
            name: name
            namespace: namespace
            optional: true
            key: key
          chartFileRef:
            path: path
            optional: true
        - secretKeyRef:
            name: name
            namespace: namespace
            optional: true
            key: key
          externalSourceRef:
            optional: true
            url: url
          configMapKeyRef:
            name: name
            namespace: namespace
            optional: true
            key: key
          chartFileRef:
            path: path
            optional: true
        test:
          cleanup: true
          enable: true
          ignoreFailures: true
          timeout: 5
        skipCRDs: true
        releaseName: releaseName
        values: '{}'
        maxHistory: 0
        timeout: 5
        disableOpenAPIValidation: true
        resetValues: true
        helmVersion: v2
        forceUpgrade: true
        targetNamespace: targetNamespace
        valueFileSecrets:
        - name: name
        - name: name
        chart:
          path: path
          ref: ref
          chartPullSecret:
            name: name
          git: git
          skipDepUpdate: true
          name: name
          secretRef:
            name: name
            namespace: namespace
          repository: repository
          version: version
      properties:
        chart:
          $ref: '#/components/schemas/v1_HelmRelease_spec_chart'
        disableOpenAPIValidation:
          description: DisableOpenAPIValidation controls whether OpenAPI validation
            is enforced.
          type: boolean
        forceUpgrade:
          description: Force will mark this Helm release to `--force` upgrades. This
            forces the resource updates through delete/recreate if needed.
          type: boolean
        helmVersion:
          description: 'HelmVersion is the version of Helm to target. If not supplied,
            the lowest _enabled Helm version_ will be targeted. Valid HelmVersion
            values are: "v2", "v3"'
          enum:
          - v2
          - v3
          type: string
        maxHistory:
          description: MaxHistory is the maximum amount of revisions to keep for the
            Helm release. If not supplied, it defaults to 10.
          type: integer
        releaseName:
          description: ReleaseName is the name of the The Helm release. If not supplied,
            it will be generated by affixing the namespace to the resource name.
          type: string
        resetValues:
          description: ResetValues will mark this Helm release to reset the values
            to the defaults of the targeted chart before performing an upgrade. Not
            explicitly setting this to `false` equals to `true` due to the declarative
            nature of the operator.
          type: boolean
        rollback:
          $ref: '#/components/schemas/v1_HelmRelease_spec_rollback'
        skipCRDs:
          description: SkipCRDs will mark this Helm release to skip the creation of
            CRDs during a Helm 3 installation.
          type: boolean
        targetNamespace:
          description: TargetNamespace overrides the targeted namespace for the Helm
            release. The default namespace equals to the namespace of the HelmRelease
            resource.
          type: string
        test:
          $ref: '#/components/schemas/v1_HelmRelease_spec_test'
        timeout:
          description: Timeout is the time to wait for any individual Kubernetes operation
            (like Jobs for hooks) during installation and upgrade operations.
          format: int64
          type: integer
        valueFileSecrets:
          description: ValueFileSecrets holds the local name references to secrets.
            DEPRECATED, use ValuesFrom.secretKeyRef instead.
          items:
            $ref: '#/components/schemas/v1_HelmRelease_spec_valueFileSecrets'
          type: array
        values:
          description: Values holds the values for this Helm release.
          properties: {}
          type: object
        valuesFrom:
          items:
            $ref: '#/components/schemas/v1_HelmRelease_spec_valuesFrom'
          type: array
        wait:
          description: Wait will mark this Helm release to wait until all Pods, PVCs,
            Services, and minimum number of Pods of a Deployment, StatefulSet, or
            ReplicaSet are in a ready state before marking the release as successful.
          type: boolean
      required:
      - chart
    v1_HelmRelease_status_conditions:
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: ChartFetched
        lastUpdateTime: 2000-01-23T04:56:07.000+00:00
        status: True
      properties:
        lastTransitionTime:
          description: LastTransitionTime is the timestamp corresponding to the last
            status change of this condition.
          format: date-time
          type: string
        lastUpdateTime:
          description: LastUpdateTime is the timestamp corresponding to the last status
            update of this condition.
          format: date-time
          type: string
        message:
          description: Message is a human readable description of the details of the
            last transition, complementing reason.
          type: string
        reason:
          description: Reason is a brief machine readable explanation for the condition's
            last transition.
          type: string
        status:
          description: Status of the condition, one of ('True', 'False', 'Unknown').
          enum:
          - True
          - False
          - Unknown
          type: string
        type:
          description: Type of the condition, one of ('ChartFetched', 'Deployed',
            'Released', 'RolledBack', 'Tested').
          enum:
          - ChartFetched
          - Deployed
          - Released
          - RolledBack
          - Tested
          type: string
      required:
      - status
      - type
    v1_HelmRelease_status:
      description: HelmReleaseStatus contains status information about an HelmRelease.
      example:
        phase: ChartFetched
        rollbackCount: 7
        releaseName: releaseName
        releaseStatus: releaseStatus
        lastAttemptedRevision: lastAttemptedRevision
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: ChartFetched
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          status: True
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: ChartFetched
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          status: True
        observedGeneration: 2
        revision: revision
      properties:
        conditions:
          description: Conditions contains observations of the resource's state, e.g.,
            has the chart which it refers to been fetched.
          items:
            $ref: '#/components/schemas/v1_HelmRelease_status_conditions'
          type: array
        lastAttemptedRevision:
          description: LastAttemptedRevision is the revision of the latest chart sync,
            and may be of a failed release.
          type: string
        observedGeneration:
          description: ObservedGeneration is the most recent generation observed by
            the operator.
          format: int64
          type: integer
        phase:
          description: Phase the release is in, one of ('ChartFetched', 'ChartFetchFailed',
            'Installing', 'Upgrading', 'Deployed', 'DeployFailed', 'Testing', 'TestFailed',
            'Tested', 'Succeeded', 'RollingBack', 'RolledBack', 'RollbackFailed')
          enum:
          - ChartFetched
          - ChartFetchFailed
          - Installing
          - Upgrading
          - Deployed
          - DeployFailed
          - Testing
          - TestFailed
          - Tested
          - Succeeded
          - Failed
          - RollingBack
          - RolledBack
          - RollbackFailed
          type: string
        releaseName:
          description: ReleaseName is the name as either supplied or generated.
          type: string
        releaseStatus:
          description: ReleaseStatus is the status as given by Helm for the release
            managed by this resource.
          type: string
        revision:
          description: Revision holds the Git hash or version of the chart currently
            deployed.
          type: string
        rollbackCount:
          description: RollbackCount records the amount of rollback attempts made,
            it is incremented after a rollback failure and reset after a successful
            upgrade or revision change.
          format: int64
          type: integer
    v1_HelmReleaseList_metadata:
      description: ListMeta describes metadata that synthetic resources must have,
        including lists and various status objects. A resource may have only one of
        {ObjectMeta, ListMeta}.
      example:
        remainingItemCount: 9
        continue: continue
        resourceVersion: resourceVersion
        selfLink: selfLink
      properties:
        continue:
          description: continue may be set if the user set a limit on the number of
            items returned, and indicates that the server has more data available.
            The value is opaque and may be used to issue another request to the endpoint
            that served this list to retrieve the next set of available objects. Continuing
            a consistent list may not be possible if the server configuration has
            changed or more than a few minutes have passed. The resourceVersion field
            returned when using this continue value will be identical to the value
            in the first response, unless you have received this token from an error
            message.
          type: string
        remainingItemCount:
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.

            This field is alpha and can be changed or removed without notice.
          format: int64
          type: integer
        resourceVersion:
          description: 'String that identifies the server''s internal version of this
            object that can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back
            to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
          type: string
        selfLink:
          description: selfLink is a URL representing this object. Populated by the
            system. Read-only.
          type: string

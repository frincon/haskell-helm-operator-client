{-
   CRDOpenAPI

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   CRDOpenAPI API version: v1.15.2
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Operator.Helm.OpenAPI.API.V1Helmrelease
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Operator.Helm.OpenAPI.API.V1Helmrelease where

import Kubernetes.OpenAPI.Core
import Kubernetes.OpenAPI.MimeTypes
import Kubernetes.OpenAPI.Model
import Operator.Helm.OpenAPI.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** V1Helmrelease

-- *** createNamespacedHelmRelease

-- | @POST \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases@
-- 
-- Creates a namespace scoped HelmRelease
-- 
createNamespacedHelmRelease 
  :: (Consumes CreateNamespacedHelmRelease contentType, MimeRender contentType V1HelmRelease)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> V1HelmRelease -- ^ "body" -  The JSON schema of the Resource to create.
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> KubernetesRequest CreateNamespacedHelmRelease contentType V1HelmRelease MimeJSON
createNamespacedHelmRelease _ body (Namespace namespace) =
  _mkRequest "POST" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases"]
    `setBodyParam` body

data CreateNamespacedHelmRelease 

-- | /Body Param/ "body" - The JSON schema of the Resource to create.
instance HasBodyParam CreateNamespacedHelmRelease V1HelmRelease 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateNamespacedHelmRelease Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateNamespacedHelmRelease mtype

-- | @application/json@
instance Produces CreateNamespacedHelmRelease MimeJSON


-- *** deleteNamespacedHelmRelease

-- | @DELETE \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}@
-- 
-- Deletes the specified namespace scoped HelmRelease
-- 
deleteNamespacedHelmRelease 
  :: (Consumes DeleteNamespacedHelmRelease contentType, MimeRender contentType V1DeleteOptions)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> V1DeleteOptions -- ^ "v1DeleteOptions"
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest DeleteNamespacedHelmRelease contentType V1Status MimeJSON
deleteNamespacedHelmRelease _ v1DeleteOptions (Namespace namespace) (Name name) =
  _mkRequest "DELETE" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name]
    `setBodyParam` v1DeleteOptions

data DeleteNamespacedHelmRelease 
instance HasBodyParam DeleteNamespacedHelmRelease V1DeleteOptions 

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteNamespacedHelmRelease GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteNamespacedHelmRelease OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
instance HasOptionalParam DeleteNamespacedHelmRelease PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteNamespacedHelmRelease mtype

-- | @application/json@
instance Produces DeleteNamespacedHelmRelease MimeJSON


-- *** getNamespacedCustomObjectStatus

-- | @GET \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}\/status@
-- 
-- read status of the specified namespace scoped custom object
-- 
getNamespacedCustomObjectStatus 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetNamespacedCustomObjectStatus MimeNoContent A.Value accept
getNamespacedCustomObjectStatus  _ (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name,"/status"]

data GetNamespacedCustomObjectStatus  
-- | @application/json@
instance Produces GetNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetNamespacedCustomObjectStatus MimeYaml


-- *** getNamespacedHelmRelease

-- | @GET \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}@
-- 
-- Returns a namespace scoped HelmRelease
-- 
getNamespacedHelmRelease 
  :: Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetNamespacedHelmRelease MimeNoContent V1HelmRelease MimeJSON
getNamespacedHelmRelease (Namespace namespace) (Name name) =
  _mkRequest "GET" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name]

data GetNamespacedHelmRelease  
-- | @application/json@
instance Produces GetNamespacedHelmRelease MimeJSON


-- *** listNamespacedHelmRelease

-- | @GET \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases@
-- 
-- list or watch namespace scoped HelmRelease
-- 
listNamespacedHelmRelease 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> KubernetesRequest ListNamespacedHelmRelease MimeNoContent V1HelmReleaseList accept
listNamespacedHelmRelease  _ (Namespace namespace) =
  _mkRequest "GET" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases"]

data ListNamespacedHelmRelease  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListNamespacedHelmRelease Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListNamespacedHelmRelease FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListNamespacedHelmRelease LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListNamespacedHelmRelease ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListNamespacedHelmRelease TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.
instance HasOptionalParam ListNamespacedHelmRelease Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListNamespacedHelmRelease MimeJSON
-- | @application/json;stream=watch@
instance Produces ListNamespacedHelmRelease MimeJsonstreamwatch


-- *** patchNamespacedCustomObjectStatus

-- | @PATCH \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}\/status@
-- 
-- partially update status of the specified namespace scoped custom object
-- 
patchNamespacedCustomObjectStatus 
  :: (Consumes PatchNamespacedCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchNamespacedCustomObjectStatus contentType A.Value accept
patchNamespacedCustomObjectStatus _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name,"/status"]
    `setBodyParam` body

data PatchNamespacedCustomObjectStatus 
instance HasBodyParam PatchNamespacedCustomObjectStatus Body 

-- | @application/json-patch+json@
instance Consumes PatchNamespacedCustomObjectStatus MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedCustomObjectStatus MimeMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchNamespacedCustomObjectStatus MimeYaml


-- *** patchNamespacedHelmRelease

-- | @PATCH \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}@
-- 
-- patch the specified namespace scoped HelmRelease
-- 
patchNamespacedHelmRelease 
  :: (Consumes PatchNamespacedHelmRelease contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to patch.
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchNamespacedHelmRelease contentType V1HelmRelease MimeJSON
patchNamespacedHelmRelease _ body (Namespace namespace) (Name name) =
  _mkRequest "PATCH" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name]
    `setBodyParam` body

data PatchNamespacedHelmRelease 

-- | /Body Param/ "body" - The JSON schema of the Resource to patch.
instance HasBodyParam PatchNamespacedHelmRelease Body 

-- | @application/json-patch+json@
instance Consumes PatchNamespacedHelmRelease MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedHelmRelease MimeMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedHelmRelease MimeJSON


-- *** replaceNamespacedCustomObjectStatus

-- | @PUT \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}\/status@
-- 
-- replace status of the specified namespace scoped custom object
-- 
replaceNamespacedCustomObjectStatus 
  :: (Consumes ReplaceNamespacedCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceNamespacedCustomObjectStatus contentType A.Value accept
replaceNamespacedCustomObjectStatus _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name,"/status"]
    `setBodyParam` body

data ReplaceNamespacedCustomObjectStatus 
instance HasBodyParam ReplaceNamespacedCustomObjectStatus Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedCustomObjectStatus mtype

-- | @application/json@
instance Produces ReplaceNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceNamespacedCustomObjectStatus MimeYaml


-- *** replaceNamespacedHelmRelease

-- | @PUT \/apis\/helm.fluxcd.io\/v1\/namespaces\/{namespace}\/helmreleases\/{name}@
-- 
-- replace the specified namespace scoped HelmRelease
-- 
replaceNamespacedHelmRelease 
  :: (Consumes ReplaceNamespacedHelmRelease contentType, MimeRender contentType V1HelmRelease)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> V1HelmRelease -- ^ "body" -  The JSON schema of the Resource to replace.
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceNamespacedHelmRelease contentType V1HelmRelease MimeJSON
replaceNamespacedHelmRelease _ body (Namespace namespace) (Name name) =
  _mkRequest "PUT" ["/apis/helm.fluxcd.io/v1/namespaces/",toPath namespace,"/helmreleases/",toPath name]
    `setBodyParam` body

data ReplaceNamespacedHelmRelease 

-- | /Body Param/ "body" - The JSON schema of the Resource to replace.
instance HasBodyParam ReplaceNamespacedHelmRelease V1HelmRelease 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedHelmRelease mtype

-- | @application/json@
instance Produces ReplaceNamespacedHelmRelease MimeJSON

